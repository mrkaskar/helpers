{
  "compilerOptions": {
    /* Basic Options */
    "target": "ES2020", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "ESNext", /* Specify what module code is generated. */
    "lib": [
      "ES2020",
    ], /* Specify library files to be included in the compilation. */
    "allowJs": false, /* Disable to avoid including .js files in the project. */
    "declaration": true, /* Generates corresponding '.d.ts' file. */
    "isolatedModules": true,
    "declarationMap": true, /* Create sourcemaps for d.ts files */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist", /* Redirect output structure to the directory. */
    "rootDir": "./src", /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "composite": true, /* Enable project compilation */
    "strict": true, /* Enable all strict type-checking options. */
    /* Module Resolution Options */
    "moduleResolution": "node", /* Specifies module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "esModuleInterop": true, /* Emit '__importStar' and '__importDefault' helpers to synthesize default imports */
    "resolveJsonModule": true, /* Include modules imported with .json extension */
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export */
    "forceConsistentCasingInFileNames": true, /* Disallow inconsistently-cased references to the same file. */
    /* Type Checking Options */
    "noImplicitReturns": true, /* Report error when not all code paths in function return a value. */
    "noImplicitThis": true, /* Raise error on 'this' expressions with an implied 'any' type. */
    "noImplicitAny": true, /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true, /* Enable strict null checks. */
    "strictFunctionTypes": true, /* Enable strict checking of function types. */
    "strictPropertyInitialization": true, /* Enable strict checking of property initialization in classes. */
    "noUnusedLocals": true, /* Report errors on unused local variables. */
    "noUnusedParameters": true, /* Report errors on unused parameters. */
    "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index signature. */
    /* Experimental Options */
    "experimentalDecorators": true, /* Enable experimental support for ES decorators. */
    "emitDecoratorMetadata": true /* Enable experimental support for emitting type metadata for decorators. */
  },
  "include": [
    "src/**/*",
  ],
  "exclude": [
    "node_modules",
    "dist",
    "test"
  ]
}